# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: client_worker.proto
# plugin: grpclib.plugin.main
import abc

import grpclib.const
import grpclib.client

from . import common_pb2
from . import client_worker_pb2


class ClientWorkerBase(abc.ABC):

    @abc.abstractmethod
    async def CreateTensor(self, stream):
        pass

    @abc.abstractmethod
    async def CreateVariable(self, stream):
        pass

    @abc.abstractmethod
    async def CreateEmbedding(self, stream):
        pass

    @abc.abstractmethod
    async def Init(self, stream):
        pass

    @abc.abstractmethod
    async def Load(self, stream):
        pass

    @abc.abstractmethod
    async def Save(self, stream):
        pass

    @abc.abstractmethod
    async def Pull(self, stream):
        pass

    @abc.abstractmethod
    async def Push(self, stream):
        pass

    @abc.abstractmethod
    async def Release(self, stream):
        pass

    @abc.abstractmethod
    async def Update(self, stream):
        pass

    @abc.abstractmethod
    async def Sync(self, stream):
        pass

    @abc.abstractmethod
    async def CompleteTask(self, stream):
        pass

    def __mapping__(self):
        return {
            '/ClientMaster.ClientWorker/CreateTensor': grpclib.const.Handler(
                self.CreateTensor,
                grpclib.const.Cardinality.UNARY_UNARY,
                client_worker_pb2.RPCTensor,
                client_worker_pb2.CreateResp,
            ),
            '/ClientMaster.ClientWorker/CreateVariable': grpclib.const.Handler(
                self.CreateVariable,
                grpclib.const.Cardinality.UNARY_UNARY,
                client_worker_pb2.RPCVariable,
                client_worker_pb2.CreateResp,
            ),
            '/ClientMaster.ClientWorker/CreateEmbedding': grpclib.const.Handler(
                self.CreateEmbedding,
                grpclib.const.Cardinality.UNARY_UNARY,
                client_worker_pb2.RPCEmbedding,
                client_worker_pb2.CreateResp,
            ),
            '/ClientMaster.ClientWorker/Init': grpclib.const.Handler(
                self.Init,
                grpclib.const.Cardinality.UNARY_UNARY,
                client_worker_pb2.TensorLike,
                common_pb2.VoidResp,
            ),
            '/ClientMaster.ClientWorker/Load': grpclib.const.Handler(
                self.Load,
                grpclib.const.Cardinality.UNARY_UNARY,
                client_worker_pb2.LoadTensorLike,
                common_pb2.VoidResp,
            ),
            '/ClientMaster.ClientWorker/Save': grpclib.const.Handler(
                self.Save,
                grpclib.const.Cardinality.UNARY_UNARY,
                client_worker_pb2.SaveTensorLike,
                common_pb2.VoidResp,
            ),
            '/ClientMaster.ClientWorker/Pull': grpclib.const.Handler(
                self.Pull,
                grpclib.const.Cardinality.UNARY_UNARY,
                client_worker_pb2.PullRequest,
                client_worker_pb2.PullResponse,
            ),
            '/ClientMaster.ClientWorker/Push': grpclib.const.Handler(
                self.Push,
                grpclib.const.Cardinality.UNARY_UNARY,
                client_worker_pb2.PushRequest,
                common_pb2.VoidResp,
            ),
            '/ClientMaster.ClientWorker/Release': grpclib.const.Handler(
                self.Release,
                grpclib.const.Cardinality.UNARY_UNARY,
                client_worker_pb2.TensorLike,
                common_pb2.VoidResp,
            ),
            '/ClientMaster.ClientWorker/Update': grpclib.const.Handler(
                self.Update,
                grpclib.const.Cardinality.UNARY_UNARY,
                client_worker_pb2.TensorLike,
                common_pb2.VoidResp,
            ),
            '/ClientMaster.ClientWorker/Sync': grpclib.const.Handler(
                self.Sync,
                grpclib.const.Cardinality.UNARY_UNARY,
                client_worker_pb2.SyncRequest,
                common_pb2.VoidResp,
            ),
            '/ClientMaster.ClientWorker/CompleteTask': grpclib.const.Handler(
                self.CompleteTask,
                grpclib.const.Cardinality.UNARY_UNARY,
                common_pb2.CompleteTaskReq,
                common_pb2.VoidResp,
            ),
        }


class ClientWorkerStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateTensor = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ClientMaster.ClientWorker/CreateTensor',
            client_worker_pb2.RPCTensor,
            client_worker_pb2.CreateResp,
        )
        self.CreateVariable = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ClientMaster.ClientWorker/CreateVariable',
            client_worker_pb2.RPCVariable,
            client_worker_pb2.CreateResp,
        )
        self.CreateEmbedding = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ClientMaster.ClientWorker/CreateEmbedding',
            client_worker_pb2.RPCEmbedding,
            client_worker_pb2.CreateResp,
        )
        self.Init = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ClientMaster.ClientWorker/Init',
            client_worker_pb2.TensorLike,
            common_pb2.VoidResp,
        )
        self.Load = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ClientMaster.ClientWorker/Load',
            client_worker_pb2.LoadTensorLike,
            common_pb2.VoidResp,
        )
        self.Save = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ClientMaster.ClientWorker/Save',
            client_worker_pb2.SaveTensorLike,
            common_pb2.VoidResp,
        )
        self.Pull = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ClientMaster.ClientWorker/Pull',
            client_worker_pb2.PullRequest,
            client_worker_pb2.PullResponse,
        )
        self.Push = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ClientMaster.ClientWorker/Push',
            client_worker_pb2.PushRequest,
            common_pb2.VoidResp,
        )
        self.Release = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ClientMaster.ClientWorker/Release',
            client_worker_pb2.TensorLike,
            common_pb2.VoidResp,
        )
        self.Update = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ClientMaster.ClientWorker/Update',
            client_worker_pb2.TensorLike,
            common_pb2.VoidResp,
        )
        self.Sync = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ClientMaster.ClientWorker/Sync',
            client_worker_pb2.SyncRequest,
            common_pb2.VoidResp,
        )
        self.CompleteTask = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ClientMaster.ClientWorker/CompleteTask',
            common_pb2.CompleteTaskReq,
            common_pb2.VoidResp,
        )
